%list of symptoms that the diseases could cause;
symptoms(flu, [fever, chills, stuffy_nose, runny_nose, headache, muscle_pain, body_ache, sore_throat, cough, fatigue, smell_loss]).
symptoms(cold, [fever, chills, stuffy_nose, runny_nose, headache, sore_throat, sneezing, cough]). 
symptoms(dengue, [fever, chills, headache, eye_pain, muscle_pain, stomach_pain, joint_pain, body_ache, stomach_pain, nausea, vomiting, rash, fatigue]).
symptoms(leptospirosis, [fever, chills, joint_pain, red_eyes, headache, stomach_pain, muscle_pain, nausea, vomiting, stomach_pain, diarrhea, jaundice, rash]).
symptoms(cholrea, [diarrhea, vomiting, leg_cramps, fatigue, dehydration]).
symptoms(pneumonia, [fever, chills, cough, phlegm, short_breath, chest_pain, fatigue]).
symptoms(acute_hiv, [fever, chills, sweating, headache, muscle_pain, joint_pain, body_ache, sore_throat, mouth_ulcer, swollen_glands, coughing, rashes, fatigue, diarrhea]).
symptoms(malaria, [fever, chills, sweating, headache, muscle_pain, joint_pain, body_ache, cough, jaundice, fatigue, vomiting, stomach_pain, diarrhea]).
symptoms(rabies, [fever, chills, headache, difficulty_swallowing, vomiting, nausea, tingling]).
symptoms(hepatitis, [fever, stomach_pain, joint_pain, jaundice, fatigue, vomiting, appetite_loss, diarrhea, light_stool, dark_urine]).

%hpi list to be generated by initial Q&A
:- dynamic hpi/1.
hpi([]).

add_to_hpi(Symptom) :-
    retract(hpi(List)),
    asserta(hpi([Symptom|List])),
    write(Symptom),
    write(" has been added to your hpi"), nl.

is_symptom_of(Symptom, Disease) :-
    symptoms(Disease, Symptoms),
    member(Symptom, Symptoms).

%adds input to hpi
get_hpi :-
    write("Enter symptom to create your hpi (Input 'stop' to exit): "),
    read(Input),
    get_hpi_helper(Input).

%if user inputs stop then it ends the hpi creation
get_hpi_helper(stop) :- !.
%if input is anything else try adding it to hpi
get_hpi_helper(Input) :-
    (is_symptom_of(Input,_) -> %if symptom exists within covered symptoms
            (hpi(Hpi), member(Input,Hpi) ->
            write(Input),
            write(" is already in your hpi")
            ;
            add_to_hpi(Input)
            )
        ;
        write(Input),
        write(" is not in the list of symptoms we cover.")
        ),
    nl, get_hpi.

%finds diseases that have all the symptoms that are listed on the hpi
find_diseases_with_symptoms(Hpi, Diseases) :-
    findall(Disease, (symptoms(Disease, Symptoms), subset(Hpi, Symptoms)), Diseases).

%if symptom is in the hpi then patient already has symptom
%otherwise, prompt to ask if the patient has a symptom X
symptom(X) :-
    hpi(Hpi),
    (member(X, Hpi);(\+member(X, Hpi),
    verify(X))).

%hypothesize gives "minimum" symptoms needed to be diagnosed with said disease
hypothesize(flu) :-
    nl, write('checking for the flu'), nl,
    symptom(fever),
    symptom(headache),
    (symptom(muscle_pain); symptom(abdominal_pain)),
    (symptom(stuffy_nose);
    symptom(runny_nose)),
    symptom(sore_throat),
    symptom(cough).

hypothesize(cold) :-
    nl, write('checking for a cold'), nl,
    symptom(headache),
    (symptom(stuffy_nose);
    symptom(runny_nose)),
    symptom(sore_throat),
    symptom(sneezing),
    symptom(cough).

hypothesize(dengue) :-
    nl, write('checking for dengue'), nl,
    symptom(fever),
    symptom(headache),
    symptom(eye_pain),
    (symptom(muscle_pain); symptom(abdominal_pain)),
    (symptom(stomach_pain);
    symptom(nausea);
    symptom(vomiting)),
    symptom(rash).

hypothesize(leptospirosis) :-
    nl, write('checking for the leptospirosis'), nl,
    symptom(fever),
    symptom(headache),
    symptom(muscle_pain),
    (symptom(stomach_pain);
    symptom(nausea);
    symptom(vomiting)),
    symptom(diarrhea),
    symptom(jaundice).

hypothesize(cholera) :-
    nl, write('checking for cholera'), nl,
    symptom(diarrhea),
    symptom(vomiting),
    symptom(leg_cramps).

hypothesize(pneumonia) :-
    nl, write('checking for the pneumonia'), nl,
    symptom(fever), %has a fever or is low temp and old
    symptom(cough), 
    symptom(phlegm), %more likely to be pneumonia when cough is not dry
    symptom(short_breath),
    symptom(chest_pain).

hypothesize(acute_hiv) :-
    nl, write('checking for the acute hiv'), nl,
    symptom(fever),
    symptom(rash),
    symptom(muscle_pain),
    symptom(sore_throat),
    symptom(swollen_lymph),
    symptom(mouth_ulcer).

hypothesize(malaria) :-
    nl, write('checking for the malaria'), nl,
    symptom(fever),
    symptom(headache),
    (symptom(muscle_pain); symptom(abdominal_pain)),
    symptom(diarrhea),
    symptom(cough),
    (symptom(stomach_pain);
    symptom(nausea);
    symptom(vomiting)),
    symptom(jaundice).
    
hypothesize(rabies) :-
    nl, write('checking for rabies'), nl,
    symptom(fever),
    symptom(headache),
    symptom(difficutly_swallowing),
    (symptom(nausea); symptom(vomiting)),
    symptom(tingling). %at site of exposure

hypothesize(heptatis) :-
    nl, write('checking for hepatitis'), nl,
    symptom(fever),
    (symptom(stomach_pain);
    symptom(nausea);
    symptom(vomiting)),
    symptom(appetite_loss),
    symptom(jaundice),
    (symptom(dark_urine); symptom(light_stool)).
    

go :-
    %ask questions to make hpi
    get_hpi,
    write("Current hpi: "),
    hpi(Hpi),
    write(Hpi), nl, 
    find_diseases_with_symptoms(Hpi, Diseases), 
    write("Possible diseases: "),
    write(Diseases), nl,
    member(X, Diseases),
    hypothesize(X),
    format('You may have ~w .~n', [X]).


ask(Question) :-
    write(Question),
    write(" (y/n) ?"),
    read(N),
    ( (N == yes ; N == y)
        ->
        assert(yes(Question)) ;
        assert(no(Question)), fail).
    
:- dynamic yes/1,no/1.		
    
verify(S) :-
    (yes(S) -> true ;
    (no(S) -> fail ;
        ask(S))).
        
undo :- retract(yes(_)),fail. 
undo :- retract(no(_)),fail.
undo.